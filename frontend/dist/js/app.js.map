{"version":3,"sources":["../deps/node_modules/browser-pack/_prelude.js","src/client.js","src/components/ActiveNotebook.js","src/components/DevTools.js","src/components/Home.js","src/components/MarkdownEditor.js","src/components/Note.js","src/components/NoteEdit.js","src/components/NoteNew.js","src/components/NoteView.js","src/components/Notebook.js","src/components/NotebookEdit.js","src/components/NotebookList.js","src/components/NotebookNew.js","src/components/NotebookView.js","src/components/Root.js","src/helpers/ajax.js","src/helpers/api.js","src/helpers/createActionDispatchers.js","src/helpers/createStore.js","src/reducers/index.js","src/reducers/notebooks.js","src/reducers/notes.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * This is the entry point for the JavaScript application which runs in the\n * web browser. We call `window.main` when the page loads, and use that\n * opportunity to create the Redux store and mount the root React component.\n */\n\nconst React = require('react');\nconst ReactDOM = require('react-dom');\n\nconst createStore = require('./helpers/createStore');\nconst Root = React.createFactory(require('./components/Root'));\n\n// Initialisation function which we will call on page load\nwindow.main = (initialState) => {\n  // Create root React component with Redux store\n  const store = createStore(initialState);\n  const rootComponent = Root({ store });\n\n  // Mount React root component in DOM\n  const mountPoint = document.getElementById('root');\n  ReactDOM.render(rootComponent, mountPoint);\n};\n","const React = require('react');\n\nconst NoteNew = require('./NoteNew');\nconst Note = require('./Note');\n\nclass ActiveNotebook extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n render() {\n   const createNoteComponent = (currentNote) => {\n      /* TODO Section 8: Add code for delete */\n      return (\n        <div>\n        <Note\n          key={currentNote.noteId}\n          note={currentNote}\n          saveNote={this.props.saveNote}\n          notebookId={this.props.notebookId}\n          deleteNote={this.props.deleteNote}\n        />\n        </div>\n      );\n    };\n\n    return(\n      <div>\n       <h2>{this.props.notebook.title}{/*'Inside notebooktitle activenotebook of ID '+this.props.notebook.id*/}</h2>\n         <ul>\n           {this.props.notes.map(createNoteComponent)}\n         </ul>\n       <NoteNew createNote={this.props.createNote} notebookId={this.props.notebookId}/>\n      </div>\n    );\n  }\n}\n\nmodule.exports = ActiveNotebook;","const React = require('react');\nconst ReduxDevtools = require('redux-devtools');\nconst DockMonitor = require('redux-devtools-dock-monitor').default;\nconst LogMonitor = require('redux-devtools-log-monitor').default;\n\nconst InternalDevTools = ReduxDevtools.createDevTools(\n  <DockMonitor toggleVisibilityKey=\"h\" changePositionKey=\"q\" defaultIsVisible={false}>\n    <LogMonitor />\n  </DockMonitor>\n);\n\nclass DevTools extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isMounted: false };\n  }\n\n  static instrument(...args) {\n    return InternalDevTools.instrument(...args);\n  }\n\n  componentDidMount() {\n    this.setState({ isMounted: true });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.isMounted && <InternalDevTools />}\n      </div>\n    );\n  }\n}\n\n/**\n * Redux development tools (useful for debugging).\n */\nmodule.exports = DevTools;\n","/**\n * This file contains the Home component.\n * Other React components for viewing notes and notebooks should be nested\n * beneath the Home component.\n */\n\nconst React = require('react');\n\nconst NotebookList = require('./NotebookList');\n\n/*\n  *** TODO: Start building the frontend from here ***\n  You should remove the placeholder text and modify the component as you see\n  fit while working on the assignment.\n*/\nconst Home = () => (\n  <div className=\"container\">\n    <h1>Neverwrote</h1>\n    <p>\n      Never say I never wrote that down.\n    </p>\n    <NotebookList />\n  </div>\n);\n\nmodule.exports = Home;\n","const React = require('react');\n\n/**\n * A markdown editor. Markdown is a very simple language for formatting\n * text that can be converted into HTML.\n */\nclass MarkdownEditor extends React.Component {\n  componentDidMount() {\n    // SimpleMDE must be required here since it's browser-only.\n    const SimpleMDE = require('simplemde');\n\n    // Turn our plain old text area into a beautiful markdown editor\n    this.simpleMDE = new SimpleMDE({\n      indentWithTabs: false,\n      status: false,\n      autoDownloadFontAwesome: false,\n      element: this.textarea\n    });\n\n    // Put initial text in the editor\n    this.simpleMDE.value(this.props.value);\n\n    // Listen for changes and fire a callback\n    this.simpleMDE.codemirror.on('change', () => {\n      const newText = this.simpleMDE.value();\n      if(newText !== this.props.value) {\n        this.props.onChange({ target: { value: newText } });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    // Replace the text in the editor, preserving the cursor position and\n    // selection info\n    const selections = this.simpleMDE.codemirror.listSelections();\n    this.simpleMDE.value(this.props.value);\n    this.simpleMDE.codemirror.setSelections(selections);\n  }\n\n  // Describe how to render the component\n  render() {\n    const ref = (element) => { this.textarea = element; };\n    return (\n      <textarea ref={ref} />\n    );\n  }\n}\n\n// Export the component so that it can be required\nmodule.exports = MarkdownEditor;\n","const React = require('react');\n\nconst NoteEdit = require('./NoteEdit');\nconst NoteView = require('./NoteView');\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set initial internal state for this component\n    this.state = { editing: false };\n  }\n\n  render() {\n    const openEdit = () => {\n      this.setState({ editing: true });\n    };\n\n    const closeEdit = () => {\n      this.setState({ editing: false });\n    };\n\n    const saveEdit = (editedNote) => {\n      this.props.saveNote(editedNote, (err) => {\n        if(!err) closeEdit();\n      });\n    };\n\n    // TODO Section 8: Add code for delete\n    const deleteThisNote = () => {\n      this.props.deleteNote(this.props.note.id);\n    };\n\n    if(this.state.editing) {\n      // Render component for editing the post\n      return (\n        <NoteEdit\n          note={this.props.note}\n          onNoteSave={saveEdit}\n          onCancel={closeEdit}\n          notebookId={this.props.notebookId}\n        />\n      );\n    }\n    // Render read-only view of the post\n    // TODO Section 8: add code for delete\n    return (\n      <NoteView\n        note={this.props.note}\n        onDeleteNote={deleteThisNote}\n        onEdit={openEdit}\n      />\n    );\n  }\n}\n\n// Export the Note component\nmodule.exports = Note;","const React = require('react');\nconst _ = require('lodash');\nconst MarkdownEditor =require('./MarkdownEditor');\n\n/**\n * A form for editing a blog post.\n */\nclass NoteEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    const note = props.note || {};\n\n    this.state = {\n      title: note.title || '',\n      content: note.content || '',\n      notebookId: this.props.notebookId\n    };\n  }\n\n  render() {\n    const revertAndStopEditing = (event) => {\n      event.preventDefault();\n      this.props.onCancel();\n    };\n\n    const submitAndStopEditing = (event) => {\n      event.preventDefault();\n      // Creates a new post object and saves it.\n      const editedNote = _.assign({}, this.props.note, {\n        title: this.state.title,\n        content: this.state.content,\n        notebookId: this.props.notebookId\n      });\n      this.props.onNoteSave(editedNote);\n    };\n\n    const onTitleChange = (event) => {\n      this.setState({ title: event.target.value });\n    };\n\n    const onContentChange = (event) => {\n      this.setState({ content: event.target.value });\n    };\n\n    return (\n      <form className=\"blog-post\">\n        {/* Title field */}\n        <div className=\"form-group\">\n          <input className=\"form-control input-lg\" value={this.state.title}\n            placeholder=\"Note title\" onChange={onTitleChange}\n          />\n        </div>\n        {/* Content field */}\n        <div>\n          <MarkdownEditor value={this.props.value} onChange={onContentChange}/>\n        </div>\n        {/* Save button */}\n        <button className=\"btn btn-default pull-right\"\n          onClick={submitAndStopEditing}\n        >\n          Save\n        </button>\n        {/* Cancel button */}\n        <button className=\"btn btn-default pull-right\"\n          style={{ marginRight: '12px' }}\n          onClick={revertAndStopEditing}\n        >\n          Cancel\n        </button>\n      </form>\n    );\n  }\n}\n\nmodule.exports = NoteEdit;","const React = require('react');\nconst NoteEdit = require('./NoteEdit');\n\n/**\n * A button which expands into a form for writing a new NOte.\n */\nclass NoteNew extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set initial internal state for this component\n    this.state = { editing: false };\n  }\n\n  render() {\n    const openEdit = () => {\n      this.setState({ editing: true });\n    };\n\n    const closeEdit = () => {\n      this.setState({ editing: false });\n    };\n\n    const createNote = (newNote) => {\n      this.props.createNote(newNote, (err) => {\n        if(!err) closeEdit();\n      });\n    };\n\n    // TODO Section 7: Write code to switch to create New not edit mode when editing is clicked\n        if (this.state.editing) {\n      // Render component for editing the post\n      return (\n        <NoteEdit\n          note={this.props.note}\n          onNoteSave={createNote}\n          content={this.props.content}\n          onCancel={closeEdit}\n          notebookId={this.props.notebookId}\n        />\n      );\n    }\n\n    return (\n     <button className=\"blog-load-more btn btn-primary btn-lg\"\n        onClick={openEdit}\n      >\n        +NewNote\n      </button>\n\n    );\n  }\n}\n\nmodule.exports = NoteNew;\n","const React = require('react');\nconst moment = require('moment');\n\nclass NoteView extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={dispContent:false};\n  }\n  render(){\n    const onEdit = (event) => {\n      event.preventDefault();\n      this.props.onEdit(this.props.note.id);\n    }\n    const DisplayContent=(event)=>{\n      event.preventDefault();\n      const toggle = this.state.dispContent? false:true;\n    \tthis.setState({dispContent:toggle});\n  };\n\n  const deleteNote=(event)=>{\n    event.preventDefault();\n    this.props.onDeleteNote(this.props.note.id);\n  }\n  return (\n    <li className=\"blog-post\" key={this.props.note.id}>\n      <button onClick={deleteNote} className=\"btn btn-danger\"><i className=\"fa fa-trash\">Delete</i></button>\n      <a role = 'button' className='Note-Title' onClick={DisplayContent}>\n        {this.props.note.title}\n      </a>\n      <a role=\"button\" title=\"Edit post\"\n        style={{ paddingRight: '8px' }}\n        onClick={onEdit}>\n        {/* Edit button to edit Note title and content */}\n        <span className=\"fa fa-edit\" />\n      </a>\n      {/*logical operator to display content depending on click of Note Title*/}\n      {this.state.dispContent && <p>{this.props.note.content}</p>}\n    </li>\n  );\n }\n}\n\nmodule.exports = NoteView;\n","const React = require('react');\n\n\nconst NotebookView = require('./NotebookView');\n\nclass Notebook extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set initial internal state for this component\n  //  this.state = { editing: false };\n  }\n\n  render() {\n    const deleteThisNotebook = () => {\n      this.props.deleteNotebook(this.props.notebook.id);\n    };\n\n    return(\n      <NotebookView\n        notebook={this.props.notebook}\n        onDelete={deleteThisNotebook}\n        loadData={this.props.loadData}\n        setActive={this.props.setActive}\n      />\n    );\n  }\n}\n\nmodule.exports = Notebook;","const React = require('react');\nconst _ = require('lodash');\n\n/**\n * A form for editing a blog Notebook.\n */\nclass NotebookEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    const notebook = props.notebook || {};\n\n    this.state = {\n      title: notebook.title || ''\n    };\n  }\n\n  render() {\n    const revertAndStopEditing = (event) => {\n      event.preventDefault();\n      this.props.onCancel();\n    };\n\n    const submitAndStopEditing = (event) => {\n      event.preventDefault();\n      // Creates a new Notebook object and saves it.\n      const editedNotebook = _.assign({}, this.props.notebook, {\n        title: this.state.title\n        //content: this.state.content\n      });\n      this.props.onSave(editedNotebook);\n    };\n\n    const onTitleChange = (event) => {\n      this.setState({ title: event.target.value });\n    };\n\n    return (\n      <form className=\"blog-post\">\n        {/* Title field */}\n        <div className=\"form-group\">\n          <input className=\"form-control input-lg\" value={this.state.title}\n            placeholder=\"Notebook title\" onChange={onTitleChange}\n          />\n        </div>\n\n        {/* Save button */}\n        <button className=\"btn btn-default pull-right\"\n          onClick={submitAndStopEditing}\n        >\n          Save\n        </button>\n        {/* Cancel button */}\n        <button className=\"btn btn-default pull-right\"\n          style={{ marginRight: '12px' }}\n          onClick={revertAndStopEditing}\n        >\n          Cancel\n        </button>\n      </form>\n    );\n  }\n}\n\nmodule.exports = NotebookEdit;","const React = require('react');\nconst ReactRedux = require('react-redux');\nconst _ = require('lodash');\n\nconst createActionDispatchers = require('../helpers/createActionDispatchers');\nconst notebooksActionCreators = require('../reducers/notebooks');\nconst notesActionCreators = require('../reducers/notes');\nconst Notebook = require('./Notebook')\nconst ActiveNotebook = require('./ActiveNotebook');\nconst NotebookNew = require('./NotebookNew');\n\n/*\n  *** TODO: Build more functionality into the NotebookList component ***\n  At the moment, the NotebookList component simply renders the notebooks\n  as a plain list containing their titles. This code is just a starting point,\n  you will need to build upon it in order to complete the assignment.\n*/\nclass NotebookList extends React.Component {\n  render() {\n    const createNotebookListItem = (notebook) => {\n      if(notebook.id == this.props.notebooks.activeNotebookId){\n        return (\n          <ActiveNotebook\n          key={notebook.id}\n          notebook={notebook}\n          notebookId={notebook.id}/// was missing this one to pass to child comp\n          notes={this.props.notes.notes}\n          createNote={this.props.createNote}\n          deleteNote={this.props.deleteNote}\n          saveNote={this.props.saveNote}\n         // notes={loadData(this.props.notebook.id)}\n          loadData={this.props.loadData}\n          //data={this.props.data}\n          />\n        );\n      }\n      return(\n          <Notebook\n          key={notebook.id}\n          notebook={notebook}\n          loadData={this.props.loadData}\n          deleteNotebook={this.props.deleteNotebook}\n          setActive={this.props.setActive}// added to test set active notebook\n          />\n        )\n      }\n\n    return (\n      <div>\n        <h2>Notebooks</h2>\n        <h2>It should be working!</h2>\n        <div id = 'top-bar-create-notebook'>\n          {/* Button for writing a new notebook */}\n          {<NotebookNew createNotebook={this.props.createNotebook}\n          />}\n        </div>\n\n        <ul>\n          {this.props.notebooks.data.map(createNotebookListItem)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst NotebookListContainer = ReactRedux.connect(\n  state => ({\n    notebooks: state.notebooks,\n    activeNotebookId: state.notebooks.activeNotebookId,\n    data: state.data,\n    notes: state.notes\n  }),\n  createActionDispatchers(notebooksActionCreators, notesActionCreators)\n)(NotebookList);\n\nmodule.exports = NotebookListContainer;\n","const React = require('react');\nconst NotebookEdit = require('./NotebookEdit');\n\n/**\n * A button which expands into a form for writing a new post.\n */\nclass NotebookNew extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set initial internal state for this component\n    this.state = { editing: false };\n  }\n\n  render() {\n    const openEdit = () => {\n      this.setState({ editing: true });\n    };\n\n    const closeEdit = () => {\n      this.setState({ editing: false });\n    };\n\n    const createNotebook = (NewNotebook) => {\n      this.props.createNotebook(NewNotebook, (err) => {\n        if(!err) closeEdit();\n      });\n    };\n\n    // TODO Section 7: Write code to switch to create New not edit mode when editing is clicked\n        if (this.state.editing) {\n      // Render component for editing the post\n      return (\n        <NotebookEdit\n          Notebook={this.props.Notebook}\n          onSave={createNotebook}\n          onCancel={closeEdit}\n        />\n      );\n    }\n\n    return (\n      <button className=\"blog-load-more btn btn-primary btn-lg\"\n        onClick={openEdit}\n      >\n       +NewNotebook\n      </button>\n    );\n  }\n}\n\nmodule.exports = NotebookNew;\n","const React = require('react');\nconst moment = require('moment');\n//const NoteList = require('./NoteList');\nconst NoteNew = require('./NoteNew');\n\nclass NotebookView extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n      const onClickNotebook = (event) => {\n    \tevent.preventDefault();\n      console.log(this.props.notebook.id);\n    \tthis.props.loadData(this.props.notebook.id);\n      this.props.setActive(this.props.notebook.id);// added to test active notebook\n\n  };\n\n  const DeleteNotebook = (event) => {\n    event.preventDefault();\n    this.props.onDelete(this.props.notebook.id);\n  }\n\n  return (\n    <div className=\"blog-notebook\">\n      <h3 className=\"blog-notebook-title\">\n       <a onClick={onClickNotebook}>\n        <li>{this.props.notebook.title}</li>\n       </a>\n       <button onClick={DeleteNotebook} className='btn btn-danger'><i className=\"fa fa-trash\"> Delete</i></button>\n      </h3>\n    </div>\n  );\n};\n}\n\nmodule.exports = NotebookView;","/**\n * The root React component from which all other components on the page are\n * descended. It is this component which is directly mounted on the DOM.\n */\n\nconst React = require('react');\nconst ReactRedux = require('react-redux');\n\nconst Provider = ReactRedux.Provider;\nconst Home = require('./Home');\n\n// Enable development tools when in development mode\nlet DevTools = 'span';\nif(process.env.NODE_ENV === 'development') {\n  DevTools = require('./DevTools');\n}\n\n// Define the Root component\nconst Root = props => (\n  /* The Provider gives descendants the ability to connect to the Redux store */\n  <Provider store={props.store}>\n    <div>\n      {/* The Home component contains the guts of the page */}\n      <Home />\n      {/* DevTools is just an empty element when not in development mode */}\n      <DevTools />\n    </div>\n  </Provider>\n);\n\nmodule.exports = Root;\n","/**\n * This helper file provides a set of functions for performing HTTP requests.\n * It will work on both the backend and the frontend.\n */\n\nconst ajax = {};\n\nif(process.env.IN_BROWSER) {\n  ajax.request = opts => new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.addEventListener('error', () => {\n      reject(new Error('Request failed'));\n    });\n    xhr.addEventListener('load', () => {\n      if(xhr.status !== 200) {\n        reject(new Error(`Received status ${xhr.status}`));\n      } else {\n        resolve(opts.json ? JSON.parse(xhr.responseText) : xhr.responseText);\n      }\n    });\n    xhr.open(opts.method, opts.url);\n    if(opts.json) {\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      xhr.send(opts.data !== undefined ? JSON.stringify(opts.data) : opts.data);\n    } else {\n      xhr.send(opts.data);\n    }\n  });\n} else {\n  const request = require('request');\n\n  ajax.request = opts => new Promise((resolve, reject) => {\n    request({\n      url: opts.url,\n      method: opts.method,\n      body: opts.data,\n      json: opts.json\n    }, (error, response, body) => {\n      if(error) {\n        reject(error);\n      } else if(response.statusCode !== 200) {\n        reject(new Error(`Received status ${response.statusCode}`));\n      } else {\n        resolve(body);\n      }\n    });\n  });\n}\n\nmodule.exports = ajax;\n","/**\n * This helper file provides a set of functions for communicating with the\n * backend API. It will work on both the backend and the frontend.\n */\n\nconst ajax = require('./ajax');\n\nconst api = {};\n\nif(process.env.IN_BROWSER) {\n  api.baseUrl = '/api';\n} else {\n  api.baseUrl = 'http://api:3000';\n}\n\napi.get = function(path) {\n  return ajax.request({\n    method: 'GET',\n    url: this.baseUrl + path,\n    json: true\n  });\n};\n\napi.post = function(path, data) {\n  return ajax.request({\n    method: 'POST',\n    url: this.baseUrl + path,\n    json: true,\n    data\n  });\n};\n\napi.put = function(path, data) {\n  return ajax.request({\n    method: 'PUT',\n    url: this.baseUrl + path,\n    json: true,\n    data\n  });\n};\n\napi.delete = function(path) {\n  return ajax.request({\n    method: 'DELETE',\n    url: this.baseUrl + path,\n    json: true\n  });\n};\n\nmodule.exports = api;\n","/**\n * Returns a function that, when given a dispatch function, returns an\n * object containing a bunch of action dispatchers.\n */\nconst createActionDispatchers = (...actionCreatorGroups) => dispatch =>\n  // Iterate over actionCreatorsArray, which is an array of arrays of action\n  // creators\n  actionCreatorGroups.reduce((actionDispatchers, actionCreators) => {\n    // Add an action dispatcher for each action creator in actionCreators\n    Object.keys(actionCreators)\n      .filter((name) => (typeof actionCreators[name] === 'function'))\n      .forEach((name) => {\n        actionDispatchers[name] = function(...actionCreatorArgs) {\n          return dispatch(actionCreators[name].apply(this, actionCreatorArgs));\n        };\n      });\n    return actionDispatchers;\n  }, {});\n\nmodule.exports = createActionDispatchers;\n","/**\n * This helper file provides a function for creating the Redux store. In\n * development mode it will also connect up the Redux development tools for\n * debugging purposes.\n */\n\nconst Redux = require('redux');\nconst reduxThunk = require('redux-thunk').default;\nconst combinedReducers = require('../reducers');\n\nlet finalCreateStore;\n\nif(process.env.NODE_ENV === 'production') {\n  finalCreateStore = Redux.compose(\n    // Enables middleware\n    Redux.applyMiddleware(reduxThunk)\n  )(Redux.createStore);\n} else {\n  const DevTools = require('../components/DevTools');\n\n  finalCreateStore = Redux.compose(\n    // Enables middleware\n    Redux.applyMiddleware(reduxThunk),\n    // Enables DevTools\n    DevTools.instrument()\n  )(Redux.createStore);\n}\n\nmodule.exports = initialState => finalCreateStore(combinedReducers, initialState);\n","/**\n * Specify all of your reducers in this file, so they can be combined into\n * one big reducer.\n */\n\nconst Redux = require('redux');\n\nmodule.exports = Redux.combineReducers({\n  notebooks: require('./notebooks'),\n  notes: require('./notes'),\n  /* *** TODO: Put any other reducers in here *** */\n  // eg. `notes: require('./notes')` if you have a reducer in reducers/notes.js\n});\n","const _ = require('lodash');\nconst api = require('../helpers/api');\nconst notesActionReducer = require('./notes');\n\n// Action type constants\n/* *** TODO: Put action constants here *** */\nconst SET_ACTIVE = 'blog-frontend/notebooks/SET_ACTIVE';\nconst INSERT = 'blog-frontend/notebooks/INSERT';\nconst REMOVE = 'blog-frontend/notebooks/REMOVE';\n\nconst initialState = {\n  data: [\n    { id: 100, title: 'From Redux Store: A hard-coded notebook' },\n    { id: 101, title: 'From Redux Store: Another hard-coded notebook' },\n  ],\n  activeNotebookId: -1,\n  notes: [],\n};\n\n// Function which takes the current data state and an action,\n// and returns a new state\nfunction reducer(state, action) {\n  state = state || initialState;\n  action = action || {};\n\n  switch(action.type) {\n    /* *** TODO: Put per-action code here *** */\n    case INSERT:{\n      const unsortedNotebooks = _.concat(state.data, action.notebooks);\n      const data = _.orderBy(unsortedNotebooks, 'createdAt','desc');\n      // Return updated state\n      return _.assign({}, state, { data} );\n    }\n\n    case REMOVE: {\n      const data = _.reject(state.data, {id: action.id});\n      return _.assign({}, state, { data });\n    }\n\n    case SET_ACTIVE: {\n      console.log('activeNotebookId  ' + state.activeNotebookId);\n    \treturn _.assign({}, state, { activeNotebookId: action.notebookId });\n    }\n\n    default: return state;\n  }\n}\n\n// Action creators\n/* *** TODO: Put action creators here *** */\n// Inserts notebooks into the NotebookList\nreducer.insertNotebooks = (notebooks) => {\n  return{type: INSERT, notebooks};\n};\n\n// Removes a post from the visible post list\nreducer.removeNotebook = (id) => {\n  return { type: REMOVE, id };\n};\n\nreducer.setActive = (notebookId) => {\n  //console.log(id);\n  return {type: SET_ACTIVE, notebookId};\n};\n\n// Attempts to save notebook in server/database and inserts it in data to display\n// in front end\nreducer.createNotebook = (newNotebook, callback) => {\n  return (dispatch) => {\n    api.post('/notebooks', newNotebook).then((notebook) => {\n      // This Notebook is one that the store returns us! It has Notebook id incremented to the next available id\n      dispatch(reducer.insertNotebooks([notebook]));\n      console.log('createNotebook in notebooks');\n      callback();\n    }).catch(() => {\n      alert('Failed to create Notebook \"FROM notebooks REDUCER\". Are all of the fields filled in correctly?');\n    });\n  };\n};\n\n// Attempts to delete a notebook from the server and removes it from the data\n// Notebook list if successful\nreducer.deleteNotebook = (id) => {\n  return (dispatch) => {\n    api.delete('/notebooks/' + id).then((notebook) => {\n      dispatch(reducer.removeNotebook(id));\n    }).catch(() => {\n      alert('Failed to delete Notebook.  Are all of the fields filled in correctly?');\n    });\n  };\n};\n\nreducer.loadData = (notebookId) => {\n\treturn (dispatch) => {\n    console.log('/notebooks/' + notebookId + '/notes')\n      dispatch(notesActionReducer.loadNotes(notebookId));\n      //dispatch({ type: SET_ACTIVE, notebookId });\n  };\n};\n/*reducer.loadData = (notebookId) => {\n\treturn (dispatch) => {\n      dispatch({ type: SET_ACTIVE, notebookId });\n      dispatch(notesActionReducer.loadNotes(notebookId));\n  };\n};*/\n// Export the action creators and reducer\nmodule.exports = reducer;\n","const _ = require('lodash');\nconst api = require('../helpers/api');\nconst notesbooksActionReducer = require('./notebooks');\n\nconst FETCH = 'blog-frontend/notes/FETCH';\nconst GET_NOTES = 'blog-frontend/notebooks/GET_NOTES';\nconst INSERT = 'blog-frontend/notes/INSERT';\nconst CHANGE = 'blog-frontend/notes/CHANGE';\nconst REMOVE = 'blog-frontend/notes/REMOVE';\n\nconst initialState = {\n  notes: [\n  ],\n  notebookId: -1\n};\n\nfunction reducer(state, action) {\n  state = state || initialState;\n  action = action || {};\n\n  switch(action.type) {\n      /* *** TODO: Put per-action code here *** */\n      case INSERT:{\n      const unsortedNotes = _.concat(state.notes, action.note);\n      const visibleNotes = _.orderBy(unsortedNotes, 'createdAt','desc');\n      // Return updated state\n      return _.assign({}, state, {notes:visibleNotes} );\n    }\n\n\n    case GET_NOTES: {\n      const notes = _.orderBy(action.notes, 'createdAt','desc');\n      return _.assign({}, state, {notes, notebookId: action.notebookId} );\n    }\n\n    case CHANGE: {\n      const notes = _.clone(state.notes);\n      const changedIndex = _.findIndex(state.notes, {id: action.note.id })\n      notes[changedIndex] = action.note;\n      return _.assign({}, state, { notes });\n    }\n\n    // Removes a single post from the visible post list\n    case REMOVE: {\n      const notes = _.reject(state.notes, {id: action.id});\n      return _.assign({}, state, { notes });\n    }\n\n    default: return state;\n  }\n}\n\n// Action creators\n/* *** TODO: Put action creators here *** */\nreducer.insertNotes = (note) => {\n  return{type: INSERT, note};\n};\n\n// Changes local post data\nreducer.changeNote = (note) => {\n  return { type: CHANGE, note };\n};\n\n// Delete Note\n// Removes a post from the visible note list\nreducer.removeNote = (id) => {\n  return { type: REMOVE, id };\n};\n\n// Attempts to delete a post from the server and removes it from the visible\n// post list if successful\nreducer.deleteNote = (noteId) => {\n   // TODO Section 8: Add code to perform delete\n   return (dispatch) => {\n    api.delete('/notes/' + noteId).then(() => {\n      dispatch(reducer.removeNote(noteId));\n    }).catch(() => {\n      alert('Failed to delete note.  Are all of the fields filled in correctly?');\n    });\n  };\n};\n\n// Attempts to update a post on the server and updates local post data if\n// successful\nreducer.saveNote = (editedNote, callback) => {\n  return (dispatch) => {\n    api.put('/notes/' + editedNote.id, editedNote).then((note) => {\n      // Saves local post.\n      dispatch(reducer.changeNote(note));\n      callback();\n    }).catch(() => {\n      alert('Failed to save post.  Are all of the fields filled in correctly?');\n    });\n  };\n};\n// Attempts to save note in server/database and inserts it in data to display\n// in front end\nreducer.createNote=(note,callback)=>{\n  return (dispatch)=>{\n    api.post('/notes',note).then((note) => {\n      //console.log(newNoteId);\n      // This Notebook is one that the store returns us! It has Notebook id incremented to the next available id\n      dispatch(reducer.insertNotes(note));\n      //callback();\n    })\n    .catch(err=>alert(err.message));\n  };\n};\n\n// Method to load notes which is called via notebooks reducer\nreducer.loadNotes = (notebookId) => {\n\treturn (dispatch) => {\n    api.get('/notebooks/' + notebookId + '/notes').then((notes) => {\n      dispatch({ type: GET_NOTES, notebookId, notes })\n    }).catch((error) => {\n      (error);\n    });\n };\n};\n\n// Action creator for loading an notebook's notes\nmodule.exports = reducer;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}